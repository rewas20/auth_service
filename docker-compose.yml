version: '3.8'

services:
  # app:
  #   build: .
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     - PORT=5000
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=auth_service
  #     - JWT_SECRET=994b1b8e8dd701f32d9a19da04b5a3d08b9572569e83c9e9cc131a87e9e9536fb5c9279d6c771d172df6eb10f981cf0a3b83ba2c67dfed23d697f1d1e74b398d
  #     - JWT_EXPIRE=30d
  #   depends_on:
  #     - postgres
  #   volumes:
  #     - .:/usr/src/app
  #     - /usr/src/app/node_modules
  #   networks:
  #     - auth-network

  # postgres:
  #   image: postgres:14-alpine
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=auth_service
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - auth-network

  redis:
    image: redis:latest
    container_name: redis_container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    env_file:
      - .env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  redis_data:
  # postgres_data:

# networks:
#   auth-network:
#     driver: bridge 